---
title: "Quarto Set Up, Descriptive Statistics and Hypotheses Testing"
shorttitle: "Quarto Descriptive Hypotheses"
author:
  - name: Yimeng (Amy) CHENG
    corresponding: true
    orcid: 0009-0007-1238-3749
    email: yimengcheng@uchicago.edu
    affiliations:
      - name: University of Chicago
        department: Department of Psychology
        address: 5801 S Ellis Ave
        city: Chicago
        region: IL
        country: USA
        postal-code: 60615
author-note:
  status-changes: 
    affiliation-change: null
    deceased: null
  disclosures:
    study-registration: null
    data-sharing: null
    related-report: null
    conflict-of-interest: "The authors declare no conflict of interest."
    financial-support: null
    gratitude: null
    authorship-agreements: null
abstract: "This assessment uses the math anxiety dataset to perform various statistical analyses and hypotheses testing."
keywords: ["Math Anxiety", "Cognitive Concerns", "Perfectionism", "Statistical Anxiety"]
bibliography: "bibliography.bib"


format:
  apaquarto-pdf:
    documentmode: man
    keep-tex: true
    toc: true
    latex-engine: xelatex
    mainfont: "Times New Roman"
  apaquarto-docx:
    toc: true
  apaquarto-html:
    toc: true
    code-fold: true

editor: 
  markdown: 
    wrap: sentence

---

```{r setup, include=FALSE}
knitr::opts_chunk$set(
  warning = FALSE,
  message = FALSE
)
```

# Objective

The objective of this assignment is to practice using R to calculate and interpret descriptive statistics. Unlike in previous assignments, you will not use a built-in dataset. Instead, you will use data from a published, open-access dataset capturing relationships between math anxiety and self-perception:

*Mackinnon, S. P., McCaughey, N., & Hill, T. G. (2024, July 25). The Association of Self-Efficacy, Anxiety Sensitivity, and Self-Critical Perfectionism with Statistics and Math Anxiety. https://doi.org/10.17605/OSF.IO/NZHQ6* 

You can access the full dataset and codebook [here](https://osf.io/nzhq6/). The data you will need is included in the .csv file within this project's directory.

Before you begin diving into the data summary, you should take some time to familiarize yourself with the dataset, including the different categories of variables and how they can be interpreted.

# Set Up
```{r}
#| label: load library

library(tidyverse)
library(tidyr)
library(purrr)
library(tibble)
library(tidyr)
library(knitr)
library(apaTables)
library(ggplot2)

set.seed(1234)
```

## Read in the data

Run this chunk to read in the dataset and view the first few rows:

```{r}
#| label: load-goal-tibble

math.anxiety <- read_csv("math-anxiety.csv") 


# View first 6 rows
head(math.anxiety)

```

Examine the structure of the df. Take note of data types and review factor levels.

```{r}
#| label: examine-structure

# Examine the structure of the df
str(math.anxiety)

# Seems like there are only two types of data: numbers and characters.


math.anxiety <- math.anxiety %>%
  mutate(across(where(is.character), as.factor))
  
math.anxiety %>%
  select(where(is.factor)) %>%
  map(levels) 

#change character data to factor so that I can see different levels
```



## Data Preparation

Not all variables are currently the data type we'd like them to be. Based on what you see when you look at the structure of the df and using the data's [codebook](https://osf.io/zh5ab), which columns are not currently in the correct data type? What changes do you need to make?

<!-- answer below -->
<!-- Hint: There are a lot of columns, and the vast majority are numeric. start by looking through the codebook to figure out what *shouldn't* be numeric and go from there. -->
Answer: Program type should not be numeric but should be factor. Id should also not be numeric but should be character.



In the chunk below, perform simple data cleaning to retype the columns as needed.

```{r}
#| label: data-type-cleaning

# Change the data type of columns as needed
math.anxiety <- math.anxiety %>%
   mutate(program.type = factor(program.type, levels = c(0, 1), labels = c("No", "Yes")), id = as.character(id))

# Change program.type to factor, with two levels: 1 prepersents yes and 0 represents no.
#Change id to character so that it would not be calculated in summary.



```


In an effort to simplify things at least a little, let's drop the columns that are item responses, keeping participant info and composite survey scores. Use the codebook to identify which columns are item responses, then modify the dataframe to drop those columns. We're assigning this to a new object, `math.anx`, to keep the original data intact.

```{r}
#| label: drop-item-responses

# There are (at least) two ways to approach this, either:
# 1. Notice that all the item responses follow a naming pattern, then use select helpers to drop them
# 2. Use the codebook to identify the columns that are *not* item responses and keep them

# Assign your new long df to math.anx
math.anx <- math.anxiety %>%
  select(id, age, gender.category, ethnicity.r, program.type, major, dal.course.code, faculty, stats, stats.history, self.efficacy, asi.phys, asi.cog, asi.social, asi, perf.cog, perf.sp, frost.ps, frost.com, frost.da, stat.anx.tc, stat.anx.i, stat.anx.ah, stat.anx.ws, stat.anx.fst, stat.anx.sc, math.anx)


```

# Descriptive Statistics

## Center and Spread

We can see basic summary statistics from the wide data (`math.anx`):

```{r}
#| label: summary-stats

# Use the appropriate function to see basic summary statistics for the wide data

summary(math.anx)


```


But that's kind of a mess, and it doesn't let us use the summary statistics for any purpose beyond just looking at them. We can use the long version to calculate summary statistics for each survey score.

The dataset is not currently in a tidy format, at least not for our purposes. The survey scores are spread across multiple columns. If we want to use a survey score as a grouping variable or calculate summary statistics, we need to reshape the data so that each survey score is in a single column.

Now pivot the data so that the survey scores are in a single column. You'll want to retain the participant information in the long format as well.

```{r}
#| label: pivot-longer

                   
# Create a list of the survey score variables


# Use pivot_longer to reshape the data so that the survey scores are in a single column


math.anx <- math.anx %>%
  pivot_longer(
    cols = c(asi.phys, asi.cog, asi.social, asi, perf.cog, perf.sp, 
             frost.ps, frost.com, frost.da, stat.anx.tc, stat.anx.i, 
             stat.anx.ah, stat.anx.ws, stat.anx.fst, stat.anx.sc, math.anx), 
    names_to = "Survey_Type",   # Create a new column named â€œsurvey_type"
    values_to = "Score"         # Put survey values to "score"
  )

head(math.anx)

                 
```

With the data in a tidy format, we can both calculate summary statistics and visualize the data more easily. Let's start with summarizing mean, median, sd, min/max, and range:


```{r}
#| label: summarize-survey-scores

# Use the long data to calculate summary statistics for each survey score

summary(math.anx) #this is the most dirct way

#I can also try a more sophisticated way:

# Calculate summary statistics for each survey score
survey_summary <- math.anx %>%
  group_by(Survey_Type) %>%  # Group by survey type
  summarise(
    Mean = mean(Score, na.rm = TRUE),  # Mean value
    Median = median(Score, na.rm = TRUE),  # Median value
    SD = sd(Score, na.rm = TRUE),  # Standard deviation
    Min = min(Score, na.rm = TRUE),  # Minimum value
    Max = max(Score, na.rm = TRUE),  # Maximum value
    Range = Max - Min  # Calculate range
  )

# Display the summarized table
survey_summary


```

There's a problem with the summary statistics above. Missing values for some scores for some participants mean that the summary calculations are also missing. In some cases that may be what we want, but in this case we have enough data that we can just ignore missing values.

```{r}
#| label: summarize-survey-scores-na

# Repeat the summarize above, but this time ignore missing values

# Save the resulting dataframe to a new object, math.anx.scores

math.anx.scores <- math.anx %>%
  group_by(Survey_Type) %>%  # Group by survey type
  summarise(
    Mean = mean(Score, na.rm = TRUE),  # Mean value
    Median = median(Score, na.rm = TRUE),  # Median value
    SD = sd(Score, na.rm = TRUE),  # Standard deviation
    Min = min(Score, na.rm = TRUE),  # Minimum value
    Max = max(Score, na.rm = TRUE),  # Maximum value
    Range = Max - Min  # Calculate range
  )

```

**As for some reason I just could not load flextable, I will use kableExtra instead to create APA formatted table.**

```{r}
library(kableExtra)

# Step 1: Summarize survey scores
survey_summary <- math.anx %>%
  group_by(Survey_Type) %>%
  summarise(
    Mean = round(mean(Score, na.rm = TRUE), 2),
    Median = round(median(Score, na.rm = TRUE), 2),
    SD = round(sd(Score, na.rm = TRUE), 2),
    Min = min(Score, na.rm = TRUE),
    Max = max(Score, na.rm = TRUE),
    Range = Max - Min
  )

# Step 2: Convert to APA formatted table

survey_summary %>%
  kable("latex", booktabs = TRUE, caption = "Table 1: Summary Statistics for Survey Scores") %>%
  kable_styling(latex_options = c("striped", "hold_position", "scale_down"), font_size = 10) %>%
  add_header_above(c(" " = 1, "Descriptive Statistics" = 6)) %>%
  column_spec(1, bold = TRUE) 

# Step 3: Print the table
survey_summary

```


We can also visualize the data to get a better sense of the distribution of scores. Let's start with a histogram of the math anxiety scores.

```{r}
#| label: fig-histogram-math-anxiety
#| fig-cap: "Distribution of Math Anxiety Scores"

# Load ggplot2 package
library(ggplot2)


math_anxiety_data <- math.anx %>%
  filter(Survey_Type == "math.anx")

ggplot(math_anxiety_data, aes(x = Score)) +
  geom_histogram(binwidth = 0.5, fill = "steelblue", color = "black", size = 1.2, alpha = 0.7) +
  labs(
    title = "Distribution of Math Anxiety Scores",
    x = "Math Anxiety Score",
    y = "Frequency"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14)
  )

```


**Extra step: Math Anxiety vs. Statistics Anxiety Scores**

```{r}
ggplot(math.anx %>% filter(Survey_Type %in% c("math.anx", "stat.anx.tc")), aes(x = Score, fill = Survey_Type)) +
  geom_histogram(position = "identity", alpha = 0.5, binwidth = 0.5, color = "black") +
  labs(
    title = "Comparison of Math and Statistics Anxiety Scores",
    x = "Score",
    y = "Frequency",
    fill = "Survey Type"
  ) +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, face = "bold", size = 14))
```

Now generate a violin plot of all the survey scores to see differences in distributions across surveys.

```{r}
#| label: fig-violin-survey-scores
#| fig-cap: "Distributions of Survey Scores"

# Create a violin plot of all survey scores

ggplot(math.anx, aes(x = Survey_Type, y = Score, fill = Survey_Type)) +
  geom_violin(trim = FALSE, alpha = 0.6) +  # Violin plot showing distribution
  geom_boxplot(width = 0.1, outlier.shape = NA, color = "black") +  # Add boxplot inside violin
  labs(
    title = "Comparison of Survey Score Distributions",
    x = "Survey Type",
    y = "Score"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),  # Rotate x-axis labels for readability
    plot.title = element_text(hjust = 0.5, face = "bold", size = 14)
  )


```

**Trying to use facets in creating violin plots**


```{r}
# Violin plot with facet_wrap()
ggplot(math.anx, aes(x = Survey_Type, y = Score, fill = Survey_Type)) +
  geom_violin(trim = FALSE, alpha = 0.6) +
  geom_boxplot(width = 0.1, outlier.shape = NA, color = "black") + 
  facet_wrap(~ Survey_Type, ncol = 3, scales = "free_y") +  # Facet into multiple rows with free y-scales
  labs(
    title = "Survey Score Distributions by Survey Type",
    x = "Survey Type",
    y = "Score"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_blank(),  # Hide x-axis labels in facets
    axis.ticks.x = element_blank(),
    strip.text = element_text(size = 10, face = "bold")
  )

```

**Creating publication quality plots using theme and labs layers**


```{r}

# Rename survey types for plain English labels
math.anx <- math.anx %>%
  mutate(Survey_Type = recode(Survey_Type,
    "math.anx" = "Math Anxiety",
    "asi" = "Global ASI",
    "asi.phys" = "Physical concerns",
    "asi.cog" = "Cognitive concerns",
    "asi.social" = "Social concerns",
    "perf.cog" = "Perfectionism Cognitions",
    "perf.sp" = "Perfectionism Self-Presentation",
    "frost.ps" = "Perfectionism Personal Standard",
    "frost.com" = "Concern Over Mistakes",
    "frost.da" = "Doubt about Actions",
    "stat.anx.tc" = "Test and Class Anxiety",
    "stat.anx.i" = "Interpretation",
    "stat.anx.ah" = "Asking for help",
    "stat.anx.ws" = "Worth of Statistics",
    "stat.anx.fst" = "Fear of Statistics",
    "stat.anx.sc" = "Computational Self-concept"
  ))

# Create violin plot
ggplot(math.anx, aes(x = Survey_Type, y = Score, fill = Survey_Type)) +
  geom_violin(trim = FALSE, alpha = 0.6, color = "black", size = 1.2) +  # Static aesthetic: black outline, thick borders
  geom_boxplot(width = 0.1, outlier.shape = NA, color = "black", alpha = 0.7) +  # Add boxplot for summary stats
  labs(
    title = "Distribution of Anxiety Scores Across Surveys",
    subtitle = "Comparing different types of anxiety and performance-related scores",
    x = "Survey Type",
    y = "Score (1-7 Scale)",
    fill = "Survey Type"
  ) +
  theme_classic() +  # Professional minimalist theme
  theme(
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5),  # Centered bold title
    plot.subtitle = element_text(size = 12, hjust = 0.2, color = "gray40"),  # Subtle subtitle
    axis.title.x = element_text(size = 14, face = "bold"),  # X-axis label bold
    axis.title.y = element_text(size = 14, face = "bold"),  # Y-axis label bold
    axis.text.x = element_text(size = 12, angle = 45, hjust = 1),  # Rotate x-axis labels for readability
    axis.text.y = element_text(size = 12),  # Readable y-axis labels
    legend.position = "none",  # Remove legend since labels are already clear
     plot.margin = margin(10, 10, 10, 50) #Increase margin so that all labels can be seen 
  )

```


*I will summarize Math Anxiety Scores and include an additional measure (Interquartile Range, IQR).*

### 1. Create a summary by program type and survey type

```{r}

# Compute summary statistics by program type and survey type
summary_stats <- math.anx %>%
  group_by(program.type, Survey_Type) %>%
  summarise(
    Mean = round(mean(Score, na.rm = TRUE), 2),
    Median = round(median(Score, na.rm = TRUE), 2),
    SD = round(sd(Score, na.rm = TRUE), 2),
    Min = min(Score, na.rm = TRUE),
    Max = max(Score, na.rm = TRUE),
    Range = Max - Min,
    IQR = IQR(Score, na.rm = TRUE)  # Additional Measure
  ) %>%
  ungroup()

# Change the variable names 
summary_stats <- summary_stats %>%
  rename(
    "Program Type" = program.type,
    "Survey Type" = Survey_Type
  )

# Create an APA-style table
summary_stats %>%
  kable("latex", booktabs = TRUE, caption = "Table 1: Summary Statistics by Program Type") %>%
  kable_styling(latex_options = c("striped", "hold_position", "scale_down"), font_size = 10) %>%
  add_header_above(c(" " = 1, "Descriptive Statistics" = 6, "Spread Measure" = 1)) %>%
  column_spec(1, bold = TRUE)

summary_stats
```
### 2. Create a Violin Plot for Score Distribution by program type

```{r violinplot, fig.cap="Violin Plot of Score Distributions"}
ggplot(math.anx, aes(x = as.factor(program.type), y = Score, fill = as.factor(program.type))) +
  geom_violin(trim = FALSE, alpha = 0.6, color = "black", size = 1.2) +
  geom_boxplot(width = 0.1, outlier.shape = NA, color = "black", alpha = 0.7) + 
  facet_wrap(~ Survey_Type, ncol = 4, scales = "free_y") +  # Facet by Survey_Type
  scale_fill_manual(values = c("#0072B2", "#D55E00"), labels = c("Non-STEM", "STEM")) +
  labs(
    title = "Survey Score Distribution by Program Type",
    x = "Program Type",
    y = "Score (1-7 Scale)",
    fill = "Program Type"
  ) +
  theme_classic() +
  theme(
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
    axis.text.x = element_text(size = 12),
    legend.position = "top"
  )

```



### 3. Create a Box-plot Using the Summarized Data

```{r boxplot, fig.cap="Boxplot of Score Distributions"}

ggplot(math.anx, aes(x = as.factor(program.type), y = Score, fill = as.factor(program.type))) +
  geom_boxplot(outlier.shape = NA, alpha = 0.7) +
  geom_jitter(width = 0.1, alpha = 0.1, color = "yellow") +
  facet_wrap(~ Survey_Type, ncol = 6, scales = "free") +
  scale_fill_manual(values = c("#0072B2", "#D55E00"), labels = c("Non-STEM", "STEM")) +
  labs(
    title = "Score Distributions by Program Type",
    x = "Program Type",
    y = "Score (1-7 Scale)",
    fill = "Program Type"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16, face = "bold", hjust = 0.5),
    axis.text.x = element_text(size = 12),
    legend.position = "top"
  )
```

Briefly describe what you see in the figures and tables you created. What do the summary statistics tell you about the data? What do the visualizations tell you about the data? What patterns do you see? Are there any other variables you think would be interesting to look at? Do the descriptives give you any ideas for interesting research questions to ask of these data?

In your answer below, use Quarto markdown references to the tables and figures you created. You can refer to the `d2mr-apaquarto` repository for examples of how to do this.

<!-- answer below -->

## Descriptive Analysis of Survey Scores by Program Type

### Summary Statistics Overview

The summary statistics presented in Table @tbl-summary-stats provide a numerical overview of survey scores across different program types. We see that the mean values across survey types range between 2 and 4, with standard deviations around 0.8 to 1.3. The interquartile range (IQR) highlights some variation in score distributions, suggesting potential differences in how students from different programs experience these anxiety and performance-related factors.

### Visualization Insights

The boxplots (Figure @boxplot) and violin plots (Figure @violinplot) offer a clearer depiction of score distributions.

Boxplots reveal that while median scores are similar between STEM and Non-STEM students, the spread of scores varies. Some survey types, such as "Asking for Help" and "Perfectionism Concern," exhibit more variability, particularly within STEM students.

Violin plots provide additional insights into the density of scores, showing that for certain survey types (e.g., "Fear of Statistics," "Math Anxiety"), there is a higher concentration of students reporting lower scores, while in other areas, scores are more evenly distributed.

### Emerging Patterns

**STEM vs. Non-STEM Differences**

STEM students tend to have slightly lower self-reported anxiety levels in some domains (e.g., "Doubt in Abilities"), but the variability is larger in others (e.g., "Fear of Statistics").

## Correlation

Now that we have a better sense of the distribution of the survey scores, let's look at the relationships between them. We can start by calculating the correlation matrix for the survey scores.

```{r correlation matrix, echo = TRUE}
#| label: correlation-matrix

# Create a matrix-like object of only survey scores (use the wide data)

# Convert long format to wide format (each survey type as a column)
survey_wide <- math.anx %>%
  select(id, Survey_Type, Score) %>%
  pivot_wider(names_from = Survey_Type, values_from = Score)

# Remove ID column (only keep numeric survey scores)
survey_scores_only <- survey_wide %>% select(-id)


# Calculate the correlation matrix for the survey scores using `cor()`

cor_matrix <- cor(survey_scores_only, use = "pairwise.complete.obs")

# Print the correlation matrix
print(cor_matrix)

```

What a mess! Put this into an APA-style table using flextable and `flextable::theme_apa()`.

*Sorry still can't use flextable. I will use another package: kableExtra*

```{r}
#| label: tbl-correlation-matrix-apa
#| tbl-cap: "Correlation Matrix using flextable"

library(dplyr)
library(tidyr)
library(kableExtra)

# Convert long format to wide format (each survey type as a column)
survey_wide <- math.anx %>%
  select(id, Survey_Type, Score) %>%
  pivot_wider(names_from = Survey_Type, values_from = Score)

# Remove ID column (only keep numeric survey scores)
survey_scores_only <- survey_wide %>% select(-id)

# Calculate the correlation matrix for the survey scores
cor_matrix <- cor(survey_scores_only, use = "pairwise.complete.obs")

# Convert matrix to a data frame for formatting
cor_df <- as.data.frame(cor_matrix) %>%
  tibble::rownames_to_column(var = "Survey Score")

# Format correlation values to 2 decimal places
cor_df <- cor_df %>%
  mutate(across(where(is.numeric), ~ round(.x, 2)))

# Create an APA-style correlation table
cor_df %>%
  kable("latex", booktabs = TRUE, caption = "Table 2: Correlation Matrix of Survey Scores") %>%
  kable_styling(latex_options = c("striped", "hold_position", "scale_down"), font_size = 10) %>%
  column_spec(1, bold = TRUE)

cor_df

```


I guess that's an improvement, but still not great. If you want, try out the `apaTables` package to see if it can make a more readable correlation matrix.

```{r}
#| label: tbl-correlation-matrix-apaTables
#| tbl-cap: "Correlation Matrix using apaTables"



# Generate an APA-formatted correlation table
apa.cor.table(survey_scores_only, filename = "correlation_table.doc", table.number = 2)


```




Visualize the correlation matrix using a heatmap using the `corrplot` package.

```{r}
#| label: fig-correlation-heatmap
#| fig-cap: "Correlation Matrix Heatmap"

# Create a correlation matrix heatmap

# Load corrplot package
library(corrplot)

# Calculate matrix
cor_matrix <- cor(survey_scores_only, use = "pairwise.complete.obs")

# Draw the heatmap
corrplot(cor_matrix, method = "color", type = "upper", 
         tl.col = "black", tl.srt = 75, number.cex = 0.5)


```


Briefly describe what you see in the correlation matrix. Do you see any general trends? Anything potentially interesting?

<!-- answer below -->

### Interpretation of the Correlation Matrix Heatmap

The heatmap displays the correlation coefficients between different survey scores, with **darker blue** shades representing stronger *positive* correlations and **darker red** shades indicating stronger *negative* correlations.

#### General Trends Observed:


**Math Anxiety Shows Distinct Patterns**

Math Anxiety appears to be more strongly correlated with Fear of Statistics and Statistics Anxiety, which makes sense given that they all relate to quantitative performance-related anxieties.

Interestingly, Math Anxiety does not seem to be as strongly correlated with social or physical anxieties, suggesting a domain-specific nature.

**Cognitive and Performance Anxiety Correlations**

Cognitive Performance and Cognitive Anxiety exhibit moderate correlations, suggesting that individuals with high cognitive anxiety may also struggle with performance-related tasks.

Perfectionism Concern shows moderate correlations with Doubt in Abilities, indicating that individuals with perfectionistic tendencies may experience self-doubt.

**Lower Correlations for Some Constructs**

Some constructs, such as Spatial Performance, show weaker correlations with most other variables, which suggests that spatial skills may be less influenced by anxiety factors in this dataset.

**Potentially Interesting Insights:**

The clustering of certain anxiety types suggests that anxiety may not be a single unified construct but rather have distinct components that interact in specific ways.

Investigating subgroup differences (e.g., STEM vs. Non-STEM students) could be interesting, as certain anxiety types may be more relevant in different academic or career paths.

The relationship between Cognitive Anxiety and Performance-Related Scores (e.g., Math Anxiety, Perfectionism Concern) might indicate that high anxiety could predict lower confidence or performance expectations.

Select at least one demographic variable to explore in relation to the survey scores. Build on the plot you created above to include the demographic variable as a grouping variable. You can use grouping aesthetics, faceting, or both.

```{r}

# Select related columns

survey_wide <- math.anx %>%
  select(id, ethnicity.r, Survey_Type, Score) %>%
  pivot_wider(names_from = Survey_Type, values_from = Score)
```



```{r}
#| label: fig-scatterplot-grouped
#| fig-cap: "Scatterplot of Cognitive Anxiety and Cognitive Performance Scores, Grouped by Ethnicity"

ggplot(survey_wide, aes(x = `Global ASI`, y = `Math Anxiety`, color = as.factor(ethnicity.r))) +
  geom_point(alpha = 0.6) +  
  geom_smooth(method = "lm", se = TRUE, aes(group = ethnicity.r), color = "black") +  
  labs(
    title = "Global ASI vs. Math Anxiety by Ethnicity",
    x = "Global ASI",
    y = "Math Anxiety",
    color = "Ethnicity"
  ) +
  theme_minimal()
             
             
```



As before, describe what you see in the scatterplot. Does the demographic variable you chose seem to be related to one or both survey scores? To the association between them? If you see any kind of relationships, what might they mean?

<!-- answer below -->

## Interpretation of the Scatterplot

In Figure @fig-scatterplot-grouped, the scatterplot illustrates the relationship between Global ASI and Math Anxiety, while incorporating ethnicity as a grouping variable.

### Key Observations:

**Positive Association Across Groups: **

The trend lines for each ethnic group indicate a general positive relationship between Global ASI and Math Anxiety. This suggests that higher Global ASI scores tend to be associated with higher Math Anxiety scores, regardless of ethnicity.

### Variability by Ethnicity:

Some ethnic groups appear to have steeper regression lines, suggesting a stronger association between Global ASI and Math Anxiety.

Others have flatter slopes, implying that Global ASI may not be as predictive of Math Anxiety for those groups.

### Confidence Intervals: 

The gray shaded areas around the regression lines represent confidence intervals. Some groups exhibit wider confidence intervals, indicating greater uncertainty in the estimates, possibly due to smaller sample sizes or greater individual variability.

### *Does Ethnicity Moderate the Relationship?*

The differences in slopes suggest that the strength of the relationship between Global ASI and Math Anxiety varies by ethnicity.

Some groups show a steeper increase in Math Anxiety with rising Global ASI, while others have a weaker or even nearly flat relationship.

This indicates a potential moderation effect of ethnicity, meaning that the impact of Global ASI on Math Anxiety might not be uniform across different ethnic backgrounds.

Further moderation analysis will be performed to analyse the relationship.


# Research Question 1: Is there a significant difference in Math Anxiety across different ethnic groups?

## Hypotheses:

Null Hypothesis ($H_0$): The mean Math Anxiety scores do not differ across ethnic groups.
Alternative Hypothesis ($H_A$): At least one ethnic group has a significantly different Math Anxiety mean score.

```{r}

# Run ANOVA for Math Anxiety
math_anxiety_anova <- aov(`Math Anxiety` ~ ethnicity.r, data = survey_wide)

# Summary of ANOVA
summary(math_anxiety_anova)


```
As the p value is insignificant, the result suggests that the mean Math Anxiety scores do not differ across ethnic groups.


## Research Question 2: Does Ethnicity Moderate the Relationship?

Now I aim to test whether ethnicity moderates the relationship between Global ASI (Anxiety Sensitivity Index) and Math Anxiety. Specifically, examining whether the effect of Global ASI on Math Anxiety varies across different ethnic groups.

### Hypotheses

#### Main Effect Hypothesis

- **Null Hypothesis ($H_0$)**: There is **no significant relationship** between Global ASI and Math Anxiety.
- **Alternative Hypothesis ($H_A$)**: There is a **significant positive relationship** between Global ASI and Math Anxiety.

$$
\beta_1 \neq 0
$$

where:

- $\beta_1$ represents the effect of Global ASI on Math Anxiety.

#### Moderation Hypothesis

- **Null Hypothesis ($H_0$)**: The relationship between Global ASI and Math Anxiety **does not depend on ethnicity** (i.e., there is no interaction).
- **Alternative Hypothesis ($H_A$)**: The relationship between Global ASI and Math Anxiety **is moderated by ethnicity** (i.e., there is a significant interaction effect).

$$
\beta_3 \neq 0
$$

where:

- $\beta_3$ represents the **interaction effect** between Global ASI and ethnicity.

---

### **Regression Model for Moderation Analysis**

The linear regression model including an **interaction term** between Global ASI and ethnicity is:

$$
\text{Math Anxiety} = \beta_0 + \beta_1 (\text{Global ASI}) + \beta_2 (\text{Ethnicity}) + \beta_3 (\text{Global ASI} \times \text{Ethnicity}) + \epsilon
$$

where:

- $\beta_0$ is the intercept.
- $\beta_1$ is the main effect of Global ASI.
- $\beta_2$ represents the effect of ethnicity.
- $\beta_3$ represents the interaction effect (i.e., moderation effect).
- $\epsilon$ is the residual error.


### Run the Linear Regression Model with Interaction

```{r}

# Fit a linear model with interaction between Global ASI and Ethnicity
math_asi_model <- lm(`Math Anxiety` ~ `Global ASI` * ethnicity.r, data = survey_wide)

# Display the model summary
summary(math_asi_model)


```


### Interpretations

# References

<!-- References will auto-populate in the refs div below -->

::: {#refs}
:::

# Appendix

# Title for Appendix
